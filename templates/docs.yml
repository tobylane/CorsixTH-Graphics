# template to build docs and on given condition deploy them to gh-pages
# may need https://www.aaron-powell.com/posts/2019-05-24-azure-pipeline-templates-and-parameters/
# recommend idempotence, eg no timestamps.
# requires a make target (ie after cmake/configure, can be minimal, ie with features turned off, eg -DWITH_AUDIO=OFF), existing gh-pages branch - make with
# - git checkout --orphan gh-pages; git rm -rf .;touch .nojekyll; git add .nojekyll; git commit -m "Initiate with .nojekyll"; git push origin gh-pages
# use as, https://docs.microsoft.com/en-us/azure/devops/pipelines/process/templates?view=azure-devops#using-other-repositories
# - template: templates/docs.yml
#   parameters:
#   condition: not(eq(variables['build.sourceBranch'], 'refs/heads/gh-pages'))  # Or exclude the branch
---
parameters:
  prefix: 'Documentation from commit'
  path: 'doc'
  target: 'doc'
  mainrepo: ''
  frontpage: '/DoxyGen/index.md'
  email: 'botty@mc.botface'
  name: 'RRS Sir David Attenborough'

steps:
  - checkout: self  # test if this works from a template, if not move it to use as
    persistCredentials: true
  - script: sudo apt-get install -V doxygen pandoc
    condition: eq($(Agent.OS), 'Linux')
    displayName: Install Linux requirements for documentation
  - script: brew install doxygen pandoc
    condition: eq($(Agent.OS), 'macOS')
    displayName: Install macOS requirements for documentation
  - script: choco install doxygen.install pandoc
    condition: eq($(Agent.OS), 'Windows NT')
    displayName: Install Windows requirements for documentation

  - bash: |
      cd $BUILD_SOURCESDIRECTORY/build/
      make $${{ parameters.target }}
      if [ -e $${{ parameters.frontpage }} ]
        then pandoc -f markdown -t html -o $${{ parameters.path }}/index.html $${{ parameters.frontpage }}
      fi
    displayName: Build documentation

  - bash: |
     if [ $BUILD_REPOSITORYNAME = "$${{ parameters.mainrepo }}" ] && [ $BUILD_SOURCEBRANCH = refs/tags/* ]
     # or commit message contains tagtest
       then
       commit="$(git rev-parse --short HEAD)"
       git config --global user.email "$${{ parameters.email }}"
       git config --global user.name "$${{ parameters.name }}"
       git checkout gh-pages
       mv build/$${{ parameters.path }}/* .
       rm -rf build/
       git add .
       git commit -m "Documentation from $commit [skip ci]" && git push --force origin HEAD:refs/heads/gh-pages \
        || echo "No update"
     fi
    displayName: Deploy documentation
   # condition: and(eq( variables['Build.Repository.Name'], '$${{ parameters.mainrepo }}'),
   # startsWith(variables['build.sourceBranch'], 'refs/head/') )
