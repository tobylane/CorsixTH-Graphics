# Template to build docs and deploy them to gh-pages (ie docs of HEAD not of tag)
# Todo: upload to different repo (sameorg/samerepo:gh-pages or sameorg/github.io:master)
# maybe parameter for matching branches (ie master to git head docs, dev to dev docs, tags to main docs)
# - checkout: self  # Must be first in this file
#    persistCredentials: true
# - template: templates/docs.yml
#    parameters:
---
parameters:
  build_script: ''  # cmake to generate makefile
  post_publish_script: ''
  makepath: 'build'
  path: 'doc/html'
  target: 'doc'
  frontpage: '/DoxyGen/index.md'
  email: 'botty@mc.botface'
  name: 'Docs bot'
  prefix: 'Documentation from commit'
  publish_condition: ''  # eq( variables['System.PullRequest.IsFork'], 'False')

steps:
  - bash: |
      if [ $(Agent.OS) = "Windows_NT" ]
      then choco install doxygen.install pandoc
      elif [ $(Agent.OS) = "Darwin" ]
      then brew install doxygen pandoc
      elif [ $(Agent.OS) = "Linux" ]
      then sudo apt-get install doxygen pandoc
      fi
    displayName: Docs - Install requirements
  - bash: |
      ${{ parameters.build_script }}
      cd $(Build.SourcesDirectory)/${{ parameters.makepath }}
      make ${{ parameters.target }}
      if [ -e ${{ parameters.frontpage }} ]
        then pandoc -f markdown -s $(Build.SourcesDirectory)/${{ parameters.frontpage }} -t html \
          -o $(Build.SourcesDirectory)/${{ parameters.path }}/${{ parameters.target }}/index.html
      fi
    displayName: Docs - Build

  - bash: |
     set -eux
     commit="$(git rev-parse --short HEAD)"
     git config --global user.email "${{ parameters.email }}"
     git config --global user.name "${{ parameters.name }}"
     cd $(Build.SourcesDirectory)
     git checkout --force gh-pages
     git reset --hard HEAD || true
     rsync ${{ parameters.makepath }}/${{ parameters.path }}/* .
     rm -rf ${{ parameters.makepath }}/
     git add .
     git commit -m "${{ parameters.prefix }} $commit [skip ci]" && git push --force origin HEAD:refs/heads/gh-pages \
      || echo "No update"
    displayName: Docs - Publish
    condition: ${{ parameters.publish_condition }}
