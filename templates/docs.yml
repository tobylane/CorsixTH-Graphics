# Template to build docs and on tag, requires trigger on tags, deploy them to gh-pages
# May need https://www.aaron-powell.com/posts/2019-05-24-azure-pipeline-templates-and-parameters/
# Use as, https://docs.microsoft.com/en-us/azure/devops/pipelines/process/templates?view=azure-devops#using-other-repositories
# Todo: upload to different repo (sameorg/samerepo:gh-pages or sameorg/github.io:master)
# maybe parameter for matching branches (ie master to main docs, dev to dev docs)
# - checkout: self  # Must be first in this file
#    persistCredentials: true
# - template: templates/docs.yml
#    parameters:
---
parameters:
  makepath: 'build'
  path: 'doc/html'
  target: 'doc'
  frontpage: '/DoxyGen/index.md'
  email: 'botty@mc.botface'
  name: 'Deploy bot'
  prefix: 'Documentation from commit'

steps:
  - bash: |
      if [ $(Agent.OS) = "Windows NT" ]
      then choco install doxygen.install pandoc
      elif [ $(Agent.OS) = "macOS" ]
      then brew install doxygen pandoc
      elif [ $(Agent.OS) = "Linux" ]
      then sudo apt-get install doxygen pandoc
      fi
    displayName: Docs - Install requirements
  - bash: |
      cd $(Build.SourcesDirectory)/${{ parameters.makepath }}
      make ${{ parameters.target }}
      if [ -e ${{ parameters.frontpage }} ] # but not default?
        then pandoc -f markdown -t html -o $(Build.SourcesDirectory)/${{ parameters.path }}/index.html \
          $(Build.SourcesDirectory)/${{ parameters.frontpage }} || true
      fi
    displayName: Docs - Build

  - bash: |
     if [ $(Build.Repository.Name) = "${{ parameters.mainrepo }}" ] && [ $(Build.SourceBranch) = refs/tags/* ] || true
       then commit="$(git rev-parse --short HEAD)"
       git config --global user.email "${{ parameters.email }}"
       git config --global user.name "${{ parameters.name }}"
       git reset --hard HEAD || true
       cd $(Build.SourcesDirectory)
       git checkout gh-pages
       mv ${{ parameters.makepath }}/${{ parameters.path }}/* .
       rm -rf ${{ parameters.makepath }}/
       git add .
       git commit -m "${{ parameters.prefix }} $commit [skip ci]" && git push --force origin HEAD:refs/heads/gh-pages \
        || echo "No update"
     fi
    displayName: Docs - Deploy
    condition: and( succeeded(), eq( System.PullRequest.IsFork, 'False')
      or( startsWith( variables['Build.SourceBranch'], 'refs/head/')),
      contains( variables['Build.SourceVersionMessage'], 'tagtest'))
