# Template to compress given path to a filename based on prefix, date,
#   platform, repo, branch, if pr, git short ref and upload
# Todo: url: https://transfer.sh https://0x0.st/ etc, format: tricky to deal with tar types
#   Upload assets from each OS to azure
# Use as, eg windows
# - template: templates/deploy.yml  # Template reference
#  parameters:
#    path: '/build/CorsixTH/RelWithDebInfo/'
#    prefix: 'CTH'
#    build_script: 'makensis.exe /V4 WindowsInstaller/Win32Script.nsi'
---
parameters:
  prefix: 'build'
  path: 'fresh'
  requirements: ''  # package; git clone repo
  build_script: ''  # fpm, dmg create, makensis.exe

steps:
  - task: UseRubyVersion@0
    condition: eq(variables['Agent.OS'], 'Linux')
    displayName: Docs - Install Ruby
  - bash: |
      if [ $(Agent.OS) = "Windows_NT" ]
      then choco install ${{ parameters.requirements }}
      elif [ $(Agent.OS) = "Darwin" ]
      then git clone https://github.com/colinjmatt/MacOS-DMG-Creator
        chmod +x MacOS-DMG-Creator/dmg-create
        if [ ${{ parameters.requirements }} ]
          then brew install ${{ parameters.requirements }}
        fi
      elif [ $(Agent.OS) = "Linux" ]
      then echo gem install fpm
        if [ ${{ parameters.requirements }} ]
          then sudo apt-get install ${{ parameters.requirements }}
        fi
      fi
    displayName: Docs - Install requirements
  - bash: |
      ref=$(git rev-parse --short HEAD)
      if [ $(Build.Reason) = "PullRequest" ]; then name="pr-$(System.PullRequestNumber)-$ref"
      elif [ $(System.PullRequest.IsFork) = "false" ] && [ $(Build.SourceBranchName) = master ]
        then name=$ref
      elif [ $(System.PullRequest.IsFork) = "false" ] && [[ $(Build.SourceBranch) = refs/tags/* ]]
        then name=${Build.SourceBranch:10} # Will trigger on tags on other branches
      else name="$(git config remote.origin.url | cut -d'.' -f2 | cut -d':' -f2)-$(Build.SourceBranchName)-$ref"
      fi
      name="${{ parameters.prefix }}-$(date +"%Y%m%d")-${name//'/'/'-'}-$(Agent.OS).zip";
      echo '##vso[task.setvariable variable=name]$name'
    displayName: Deploy - Name
    name: Naming
  - bash: |
      env | grep NAME
      echo -
      echo $NAME - $(NAME)
  # /${{ parameters.path }}
  - task: ArchiveFiles@2
    inputs:
      rootFolderOrFile: '$(Build.SourcesDirectory)'
      archiveFile: '$(Agent.OS).zip'
      verbose: true
    displayName: Deploy - Archive
  - task: cURLUploader@2
    inputs:
      enabled: true
      files: '$(Agent.OS).zip'
      url: 'https://transfer.sh/$(NAME)'
      authType: userAndPass
      remotePath:
      timeoutInMinutes: 1
      continueOnError: true
    displayName: Deploy - Upload archive

  - bash: ${{ parameters.build_script }}
    displayName: Deploy - Platform specific packaging
    continueOnError: true
  #- publish: '${{ parameters.path }} *.zip *.nsi *.dmg'
  #  continueOnError: true # because https://github.com/MicrosoftDocs/vsts-docs/issues/6762
    # only if release conditions?
# Custom steps:
#  - ${{ if parameters['job_post-steps'] }}:
#    - ${{ parameters['job_post-steps'] }}
