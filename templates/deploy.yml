# template to compress given path to a filename based on prefix, date,
#   platform, repo, branch, if pr, git short ref and upload
# todo: checksums, signing
# use as
# - template: scripts/templates/deploy.yml  # Template reference
#  parameters:
#    path: mac /fresh/CorsixTH/ windows /build/CorsixTH/Release/
#    prefix: 'Cth'
---
parameters:
  prefix: 'build'
  path: 'fresh'
  mainrepo: ''
# url? https://transfer.sh, https://0x0.st/, etc
# format? tricky to deal with tar types

steps:
  - bash: |
      ref = git rev-parse --short HEAD
      if [ $BUILD_REASON = "PullRequest" ]; then name="pr-$SYSTEM_PULLREQUESTNUMBER-$ref"
      elif [ $BUILD_REPOSITORYNAME != "$${{ parameters.mainrepo }}" ] ||
        [ $BUILD_REPOSITORYNAME = "$${{ parameters.mainrepo }}" && $BUILD_SOURCEBRANCHNAME != master ]
        then name="$BUILD_REPOSITORYNAME"/"$BUILD_SOURCEBRANCHNAME"-"$ref"
      elif [ $BUILD_REPOSITORYNAME = "$${{ parameters.mainrepo }}"
        && $BUILD_SOURCEBRANCH = refs/tags/* ]  # will trigger on tags on other branches
        then name=${BUILD_SOURCEBRANCH:10}
      else name=$ref
      fi
      name="$${{ parameters.prefix }}-$(date +"%Y%m%d")-$name-$AGENT_JOBNAME.zip";
      ##vso[task.setvariable variable=name]$name; echo $name
      # cp README.txt LICENSE.txt CONTRIBUTING.txt changelog.txt ${{ parameters.path }}
    displayName: Naming item
  - task: ArchiveFiles@2
    inputs:
      rootFolderOrFile: '$(Build.SourcesDirectory)/${{ parameters.path }}'
      archiveFile: '$(Agent.JobName).zip'
      verbose: true
  - task: cURLUploader@2
    inputs:
      files: '$(Agent.JobName).zip'
      url: 'https://transfer.sh/$(name)'
      authType: userAndPass
      remotePath:

