# Template to compress given path to a filename based on prefix, date,
#   platform, repo, branch, if pr, git short ref and upload
# Todo: platform specific packages (nsis script location, dmg background path), checksums, signing,
#   url: https://transfer.sh https://0x0.st/ etc, format: tricky to deal with tar types
#   Upload assets from each OS to azure
# Use as
# - template: templates/deploy.yml  # Template reference
#  parameters:
#    path: mac /fresh/CorsixTH/ windows /build/CorsixTH/RelWithDebInfo/
#    prefix: 'Cth'
---
parameters:
  prefix: 'build'
  path: 'fresh'
  NSIS: 'WindowsInstaller/Win32Script.nsi'

steps:
  - task: UseRubyVersion@0
    condition: eq(variables['Agent.OS'], 'Linux')
    displayName: Docs - Install Ruby
  - bash: |
      if [ $(Agent.OS) = "Windows_NT" ]
      then choco install
      elif [ $(Agent.OS) = "Darwin" ]
      then git clone https://github.com/colinjmatt/MacOS-DMG-Creator
        chmod +x MacOS-DMG-Creator/dmg-create
      elif [ $(Agent.OS) = "Linux" ]
      then echo gem install fpm
      fi
    displayName: Docs - Install requirements
  - bash: |
      ref=$(git rev-parse --short HEAD)
      if [ $(Build.Reason) = "PullRequest" ]; then name="pr-$(System.PullRequestNumber)-$ref"
      elif [ $(System.PullRequest.IsFork) = "false" ] && [ $(Build.SourceBranchName) = master ]
        then name=$ref
      elif [ $(System.PullRequest.IsFork) = "false" ] && [[ $(Build.SourceBranch) = refs/tags/* ]]
        then name=${Build.SourceBranch:10} # Will trigger on tags on other branches
      else name="$(git config remote.origin.url | cut -d'.' -f2 | cut -d':' -f2)-$(Build.SourceBranchName)-$ref"
      fi
      name="${{ parameters.prefix }}-$(date +"%Y%m%d")-${name//'/'/'-'}-$(Agent.OS).zip";
      echo '##vso[task.setvariable variable=name;isOutput=true]$name'
    displayName: Deploy - Naming
    name: Naming
  - task: ArchiveFiles@2
    inputs:
      rootFolderOrFile: '$(Build.SourcesDirectory)/${{ parameters.path }}'
      archiveFile: '$(Agent.OS).zip'
      verbose: true
    displayName: Deploy - Archiving
  - task: cURLUploader@2
    inputs:
      enabled: false
      files: '$(Agent.OS).zip'
      url: 'https://transfer.sh/$(Naming.name)'
      authType: userAndPass
      remotePath:
      timeoutInMinutes: 1
      continueOnError: true
    displayName: Deploy - Uploading archive

  - bash: |
      if [ $(Agent.OS) = "Windows_NT" ]
      then makensis.exe /V4 ${{ parameters.NSIS }}
      elif [ $(Agent.OS) = "Darwin" ]
      then dmg-create --background CorsixTH/build_files/CthDmgBackground.png --volname "$name" \
        --volicon CorsixTH/CorsixTH/Icon.icns --icon-size 48 --window-size 600 337 --text-size 12 \
        --icon CorsixTH 76 151 --app-drop-link 224 151 $(name)".dmg" $(Build.SourcesDirectory)/${{ parameters.path }}
      elif [ $(Agent.OS) = "Linux" ]
      then echo fpm help
        openssl dgst -sha256 $(Build.SourcesDirectory)/${{ parameters.path }} > sha256 || true
      fi
    displayName: Deploy - Platform specific packaging
    continueOnError: true
    # upload these packages?
  - upload: *.zip  # *.nsi *.dmg
    continueOnError: true
    # list all files, with continueonerror?
# Custom steps:
#  - ${{ if parameters['job_post-steps'] }}:
#    - ${{ parameters['job_post-steps'] }}
